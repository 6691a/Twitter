[{"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\signup.jsx":"1","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\app.jsx":"2","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\info_input.jsx":"3","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\info_check.jsx":"4","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\index.js":"5","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\info_confirm.jsx":"6","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\info_profile.jsx":"7","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\info_password.jsx":"8","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\login\\login.jsx":"9","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\loading\\loading.jsx":"10","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\utills\\path.js":"11","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\twitter\\twitter.jsx":"12","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\home\\home.jsx":"13"},{"size":2558,"mtime":1610344323246,"results":"14","hashOfConfig":"15"},{"size":1193,"mtime":1610345235116,"results":"16","hashOfConfig":"15"},{"size":7103,"mtime":1609901362514,"results":"17","hashOfConfig":"15"},{"size":2877,"mtime":1609822498511,"results":"18","hashOfConfig":"15"},{"size":233,"mtime":1609812492772,"results":"19","hashOfConfig":"15"},{"size":3277,"mtime":1609901601619,"results":"20","hashOfConfig":"15"},{"size":3027,"mtime":1610345432622,"results":"21","hashOfConfig":"15"},{"size":2430,"mtime":1609726833279,"results":"22","hashOfConfig":"15"},{"size":2734,"mtime":1610345479801,"results":"23","hashOfConfig":"15"},{"size":294,"mtime":1609812272336,"results":"24","hashOfConfig":"15"},{"size":52,"mtime":1609901662499,"results":"25","hashOfConfig":"15"},{"size":2824,"mtime":1610352176781,"results":"26","hashOfConfig":"15"},{"size":17715,"mtime":1610427864187,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"vkmfbn",{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\signup.jsx",["57","58","59","60","61","62","63","64"],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\app.jsx",["65","66","67","68","69"],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\info_input.jsx",["70"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport styles from './info_input.module.css';\r\nimport {API_BASE_URL} from '../../utills/path';\r\n\r\nconst Info_input = (props) => {\r\n    const emailRef = useRef();\r\n    const nameRef = useRef();\r\n    const [month, setMonth] = useState(props.birthday ? props.birthday.split('-')[1] : \"\");\r\n    const [date, setDate] = useState(props.birthday ? props.birthday.split('-')[2] : \"\");\r\n    const [year, setYear] = useState(props.birthday ? props.birthday.split('-')[0] : \"\");\r\n    const [disable, setDisable] = useState(true);\r\n    const [email_Valid, setEmail_Valid] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const email = emailRef.current.value.length;\r\n        const name = nameRef.current.value.length;\r\n        email > 0 && \r\n        name > 0 &&\r\n        month &&\r\n        date &&\r\n        year ? setDisable(false) : setDisable(true)        \r\n    },[month, date, year])\r\n    \r\n    useEffect(() => {\r\n        email_Valid && props.setState('password');\r\n    }, [email_Valid])\r\n\r\n    const refSelect = (event, target) => {\r\n        switch(target) {\r\n            case 'Month':\r\n                setMonth(event.target.value);\r\n                break;\r\n\r\n            case 'Date':\r\n                setDate(event.target.value);\r\n                break;\r\n\r\n            case 'Year':\r\n                setYear(event.target.value);\r\n                \r\n                break;\r\n            default :\r\n                setDate(1);\r\n                setMonth(1);\r\n                setYear(new Date().getFullYear());\r\n        }     \r\n    }\r\n\r\n    const handleNext = (e) => {\r\n        e.preventDefault();\r\n        props.setName(nameRef.current.value);\r\n        props.setEmail(emailRef.current.value);\r\n        const birthday = year + '-' + month+ '-' + date\r\n        props.setBirthday(birthday);\r\n        findUser();\r\n    }\r\n\r\n\r\n    const findUser = () =>{\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n        };\r\n\r\n        if(emailRef.current.value) {\r\n            fetch(`${API_BASE_URL}/user/find/${emailRef.current.value}/`, requestOptions)\r\n            .then(response => {\r\n                if(response.status === 201) {\r\n                    setEmail_Valid(false);\r\n                    setError(true);\r\n                }\r\n                else {\r\n                    setEmail_Valid(true)\r\n                }\r\n            })\r\n            .catch(error => console.log('error', error));\r\n                // .then(response => response.json())\r\n                // .then(result => result.hasOwnProperty('email') ? setEmail_Valid(true): setEmail_Valid(false))\r\n                // .catch(error => console.log('error', error));\r\n        };\r\n\r\n    }\r\n\r\n    const getMonth = () => {\r\n        const array =  [];\r\n        const start = 1;\r\n        const end = 12;\r\n        for(let i = start; i <= end; ++i) {\r\n            array.push(<option value={i} key={`${i}월`}>{`${i}월`}</option>);\r\n        }\r\n        return array;\r\n    }\r\n\r\n    const getDate = () => {\r\n        const array =  [];\r\n        const start = 1;\r\n        const end = 31;\r\n        for(let i = start; i <= end; ++i) {\r\n            array.push(<option value={i} key={`${i}일`}>{i}</option>);\r\n        }\r\n        return array;\r\n    }\r\n    const getYear = () => {\r\n        const yearArray =  [];\r\n        const startYear = 1900;\r\n        const endYear = new Date().getFullYear();\r\n\r\n        for(let i = endYear; i>= startYear; --i) {\r\n            yearArray.push(<option value={i} key={`${i}년`}>{i}</option>);\r\n        }\r\n        return yearArray;\r\n    }\r\n\r\n    const defaultValue = () => {\r\n        const array = [];\r\n        \r\n        props.name && array.push(props.name);\r\n        props.email && array.push(props.email);\r\n            \r\n        return array;\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div className={styles.background}>\r\n                <div className={styles.sinup}>\r\n                    <form action=\"\"  onSubmit={(e)=>{handleNext(e);}} >\r\n                        <div className={styles.title}>\r\n                            <div className={styles.container_left} ></div>\r\n                            <img className={styles.logo} src=\"/images/twitter.svg\" alt=\"\"/>\r\n                            <button className={styles.next_Btn} disabled={disable}  type='submit'>다음</button>\r\n                        </div>\r\n                        <div className={styles.body}>\r\n                            <h1>계정을 생성하세요</h1>\r\n                            <label className={styles.input_label_email}>\r\n                                <span className={styles.input_text}>이름</span>\r\n                                <input className ={styles.name_input} ref={nameRef} defaultValue ={defaultValue()[0]} type=\"text\"/> \r\n                            </label>\r\n\r\n                            <label className={styles.input_label_password}>\r\n                                <span className={styles.input_text}>이메일</span>\r\n                                <input className ={styles.email_input} ref={emailRef}  defaultValue ={defaultValue()[1]} type=\"email\"  /> \r\n                            </label>\r\n\r\n                            {error && \r\n                                <span className={styles.error_msg}>이미 등록된 이메일입니다.</span>\r\n                            }\r\n\r\n                            <h2>생년월일</h2>\r\n                                <span className={styles.comment}>이 정보는 공개적으로 표시되지 않습니다. 비즈니스, 반려동물 등 계정 주제에 상관 없이 나의 연령을 확인하세요.</span>                                <div className={styles.select_box}> \r\n                                <span className={styles.option_text}>월</span>\r\n                                <select defaultValue ={month}  className={styles.month} onChange={(e) => {refSelect(e,'Month')}}>\r\n                                    <option value =\"\"  disabled > </option>\r\n                                    {getMonth()}\r\n                                </select>\r\n                                <span className={styles.option_text}>일</span>\r\n                                <select defaultValue ={date} className={styles.date} onChange={(e) => {refSelect(e,'Date')}}>\r\n                                    <option value =\"\" disabled> </option>\r\n                                    {getDate()}\r\n                                </select>\r\n                                <span className={styles.option_text}>년</span>\r\n                                <select defaultValue ={year} className={styles.year} onChange={(e) => {refSelect(e,'Year')}}>\r\n                                    <option value =\"\"  disabled> </option>\r\n                                    {getYear()}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </form>                    \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Info_input;",["71","72"],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\info_check.jsx",[],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\index.js",[],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\info_confirm.jsx",[],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\info_profile.jsx",["73"],"import React, {useState} from 'react';\r\nimport styles from './info_input.module.css';\r\nimport {API_BASE_URL} from '../../utills/path';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Info_profile = (props) => {\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const [fileURL,setFileURL] =  useState()\r\n    const [imgData, setImgData] = useState(\"https://twitter-image-server.s3.ap-northeast-2.amazonaws.com/media/default/default_profile_400x400.png\")\r\n    \r\n    const setProfile = (e) => {\r\n        e.preventDefault()\r\n        console.log(fileURL);\r\n        upload_img();\r\n    }\r\n\r\n    const handleFile = (e) => {\r\n        if(e.target.files[0]) {\r\n            \r\n            setFileURL(e.target.files[0])\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", ()=>{\r\n                setImgData(reader.result);\r\n            })\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const upload_img = () => {\r\n        if(fileURL){\r\n            var formdata = new FormData();\r\n            formdata.append(\"img\", fileURL);\r\n            formdata.append(\"email\", props.email);\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                body: formdata,\r\n                redirect: 'follow'\r\n            };\r\n            \r\n            \r\n            fetch(`${API_BASE_URL}/user/profile/`, requestOptions)\r\n            .then(response =>  response.status == 200 && history.push('/login'))\r\n            .catch(error => console.log('error', error));\r\n        }\r\n        // else {\r\n        //     props.history.push('/login')\r\n        // }\r\n    }\r\n    return(\r\n        \r\n        <div className={styles.background}>\r\n            {`url: ${fileURL}`}\r\n            <div className={styles.sinup}>\r\n                <form action=\"\" onSubmit={setProfile}>\r\n                    <div className={styles.title}>\r\n                        <div className={styles.container_left} ></div>\r\n                        <img className={styles.logo} src=\"/images/twitter.svg\" alt=\"\"/>\r\n                        <button className={styles.next_Btn}   type='submit'>다음</button>\r\n\r\n                    </div>\r\n                    <div className={styles.body}>\r\n                        <h1>프로필 사진 선택하기</h1>\r\n                        <span className={styles.comment}>마음에 드는 셀카 사진이 있나요? 지금 업로드하세요.</span>\r\n\r\n                        <label className={styles.input_label_file}>\r\n                            <input className={styles.img_uploader}type=\"file\" accept='image/jpg,image/png,image/jpeg,image/gif' onChange={handleFile}/>\r\n                            <img className={styles.upload_img} src={imgData} alt=\"\"/> \r\n                        </label>\r\n                        {/* <span className={styles.input_key_text}>이메일을 받지 못하셨나요?</span> */}\r\n                    </div>\r\n                </form>                    \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Info_profile;","C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\signup\\info_password.jsx",[],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\login\\login.jsx",[],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\loading\\loading.jsx",[],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\utills\\path.js",[],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\componets\\twitter\\twitter.jsx",[],"C:\\Users\\97200\\Desktop\\W\\twitter\\front\\src\\home\\home.jsx",["74"],{"ruleId":"75","severity":1,"message":"76","line":33,"column":29,"nodeType":"77","messageId":"78","endLine":33,"endColumn":31},{"ruleId":"79","severity":1,"message":"80","line":43,"column":17,"nodeType":"81","endLine":43,"endColumn":160},{"ruleId":"79","severity":1,"message":"80","line":44,"column":17,"nodeType":"81","endLine":44,"endColumn":114},{"ruleId":"79","severity":1,"message":"82","line":47,"column":24,"nodeType":"81","endLine":47,"endColumn":86},{"ruleId":"79","severity":1,"message":"83","line":50,"column":24,"nodeType":"81","endLine":50,"endColumn":160},{"ruleId":"79","severity":1,"message":"84","line":53,"column":24,"nodeType":"81","endLine":53,"endColumn":73},{"ruleId":"79","severity":1,"message":"85","line":56,"column":24,"nodeType":"81","endLine":56,"endColumn":91},{"ruleId":"79","severity":1,"message":"80","line":59,"column":24,"nodeType":"81","endLine":59,"endColumn":101},{"ruleId":"86","severity":1,"message":"87","line":1,"column":8,"nodeType":"88","messageId":"89","endLine":1,"endColumn":14},{"ruleId":"86","severity":1,"message":"90","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":19},{"ruleId":"86","severity":1,"message":"91","line":6,"column":10,"nodeType":"88","messageId":"89","endLine":6,"endColumn":19},{"ruleId":"86","severity":1,"message":"92","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":15},{"ruleId":"86","severity":1,"message":"93","line":19,"column":16,"nodeType":"88","messageId":"89","endLine":19,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":27,"column":8,"nodeType":"96","endLine":27,"endColumn":21,"suggestions":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"75","severity":1,"message":"76","line":45,"column":48,"nodeType":"77","messageId":"78","endLine":45,"endColumn":50},{"ruleId":"86","severity":1,"message":"102","line":17,"column":11,"nodeType":"88","messageId":"89","endLine":17,"endColumn":18},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component Info_input must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Info_password must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Info_check must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Info_confirm must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Info_profile must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'getByText' is defined but never used.","'Loading' is defined but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["103"],"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"'history' is assigned a value but never used.",{"desc":"106","fix":"107"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [email_Valid, props]",{"range":"108","text":"109"},[1076,1089],"[email_Valid, props]"]